version: '3.5'

services:
  postgresql:
    image: bitnami/postgresql:latest
    volumes:
      - postgresqldata:/bitnami/postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_USER: hibernate
      POSTGRESQL_PASSWORD: hibernate
      POSTGRESQL_DATABASE: hibernate_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "hibernate", "-d", "hibernate_db" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - kafkastreams-network

  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - kafkastreams-network

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - kafkastreams-network

  stream-consumer-service:
    depends_on:
      kafka:
        condition: service_started
      postgresql:
        condition: service_healthy
    image: stream-consumer-service:1.0
    build:
      context: applications/stream-consumer-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8083:8083"
    networks:
      - kafkastreams-network

  stream-analysis-service:
    depends_on:
      kafka:
        condition: service_started
      postgresql:
        condition: service_healthy
    image: stream-analysis-service:1.0
    build:
      context: applications/stream-analysis-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8082:8082"
    networks:
      - kafkastreams-network

  reverted-revisions-service:
    depends_on:
      kafka:
        condition: service_started
      postgresql:
        condition: service_healthy
    image: reverted-revisions-service:1.0
    build:
      context: applications/reverted-revisions-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    networks:
      - kafkastreams-network

networks:
  kafkastreams-network:
    name: ks

volumes:
  postgresqldata:
    driver: local