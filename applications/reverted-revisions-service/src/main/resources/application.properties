quarkus.http.port=${PORT:-8081}

%prod.kafka.bootstrap.servers=${KAFKA_URL}
%prod.kafka.group.id=${KAFKA_PREFIX}reverted-revisions-app

mp.messaging.incoming.reverted-revisions.topic=${KAFKA_PREFIX}reverted-revisions
mp.messaging.incoming.reverted-revisions.connector=smallrye-kafka
mp.messaging.incoming.reverted-revisions.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.reverted-revisions.value.deserializer=org.mdholloway.wikitrends.RevisionCreateDeserializer
%prod.mp.messaging.incoming.reverted-revisions.kafka-configuration=ssl-config

quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.reactive.url=vertx-reactive:postgresql://host.docker.internal:5432/hibernate_db
%dev.quarkus.datasource.username=hibernate
%dev.quarkus.datasource.password=hibernate
%prod.quarkus.datasource.reactive.url=${DATABASE_URL:-vertx-reactive:postgresql://host.docker.internal:5432/hibernate_db}
%prod.quarkus.datasource.reactive.trust-all=true
%prod.quarkus.datasource.reactive.postgresql.ssl-mode=require

quarkus.hibernate-orm.database.generation=drop-and-create